events {
    worker_connections 1024;
}

http {
    server {
        listen 80;

        location / {
            proxy_pass http://web:80;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location ~ ^/_services/proxy(/.*)$ {
            rewrite ^/_services/proxy(/.*)$ $1 break;
            proxy_pass http://proxy:8080;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Upgrade $http_upgrade;   # Necessary for WebSocket upgrade
            proxy_set_header Connection "upgrade";    # Necessary for WebSocket upgrade
            proxy_read_timeout 86400;                 # WebSocket connections can be long-lived
        }

        location ~ ^/_services/vss(/.*)$ {
            rewrite ^/_services/vss(/.*)$ $1 break;
            proxy_pass http://vss:8080;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location ~ ^/_services/rgs(/.*)$ {
            rewrite ^/_services/rgs(/.*)$ $1 break;
            root /var/www/rgs;
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*' always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
                add_header 'Access-Control-Max-Age' 1728000 always;
                add_header 'Content-Type' 'text/plain; charset=utf-8' always;
                add_header 'Content-Length' 0 always;
                return 204;
            }
            if ($request_method = 'GET') {
                add_header 'Access-Control-Allow-Origin' '*' always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
                add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
            }
            if ($request_method = 'POST') {
                add_header 'Access-Control-Allow-Origin' '*' always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
                add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
            }
            index index.html;
            try_files $uri $uri/ =404;
        }

        location ~ ^/_services/rgs/snapshot(/.*)?$ {
            root /var/www/rgs;
            try_files $uri $uri/ /res/symlinks$1.bin =404;
            autoindex on;
            rewrite ^/_services/rgs/snapshot/(\d+)$ /_services/rgs/snapshot/$1.bin break;
            rewrite ^/_services/rgs/snapshot/(\d+)\.bin$ /_services/rgs/snapshot/$1 break;
        }
    }
}